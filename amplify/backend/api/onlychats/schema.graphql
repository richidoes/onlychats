input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type User @model {
  id: ID!
  firstName: String
  lastName: String
  profilePicture: String
  email: String
  status: String
  notificationToken: String
  latitude: String
  longitude: String
  chatRooms: [ChatRoom] @manyToMany(relationName: "UserChatRooms")
}

type ChatRoom @model {
  id: ID!
  isSeenBy: [ID]
  messages: [Message] @hasMany
  lastMessage: Message @hasOne
  participants: [User] @manyToMany(relationName: "UserChatRooms")
  createdAt: String
  updatedAt: String
}

type Post @model {
  id: ID!
  type: String
    @default(value: "Post")
    @index(
      name: "postsByDate"
      queryField: "postsByDate"
      sortKeyFields: ["createdAt"]
    )
  author: User @hasOne
  content: String
  numberOfLikes: Int
  likedBy: [ID]
  createdAt: String
  updatedAt: String
}

type Message @model {
  id: ID!
  chatRoomID: ID!
    @index(
      name: "messagesByChatRoom"
      queryField: "messagesByChatRoom"
      sortKeyFields: ["createdAt"]
    )
  author: User @hasOne
  content: String
  createdAt: String
  updatedAt: String
}

type Notification @model {
  id: ID!
  receiver: ID!
    @index(
      name: "notificationsByUserID"
      queryField: "notificationsByUserID"
      sortKeyFields: ["createdAt"]
    )
  sender: User! @hasOne
  type: NotificationType
  postID: ID
  chatRoomID: ID
  isSeen: Boolean
  createdAt: String
  updatedAt: String
}

enum NotificationType {
  LIKED_POST
  STARTED_CONVERSATION
}
